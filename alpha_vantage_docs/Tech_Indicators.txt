Help on function get_ad in module alpha_vantage.techindicators

get_ad(self, symbol, interval='daily')
    Return the Chaikin A/D line values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')

----------------------------------------------------------------------

Help on function get_adosc in module alpha_vantage.techindicators

get_adosc(self, symbol, interval='daily', fastperiod=None, slowperiod=None)
    Return the Chaikin A/D oscillator values in two
    json objects as data and meta_data. It raises ValueError when problems
    arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily'
        fastperiod:  Positive integers are accepted (default=None)
        slowperiod:  Positive integers are accepted (default=None)

----------------------------------------------------------------------

Help on function get_adx in module alpha_vantage.techindicators

get_adx(self, symbol, interval='daily', time_period=20)
    Return  the average directional movement index values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_adxr in module alpha_vantage.techindicators

get_adxr(self, symbol, interval='daily', time_period=20)
    Return  the average directional movement index  rating in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_apo in module alpha_vantage.techindicators

get_apo(self, symbol, interval='daily', series_type='close', fastperiod=None, slowperiod=None, matype=None)
    Return the absolute price oscillator values in two
    json objects as data and meta_data. It raises ValueError when problems
    arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default '60min)'
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')
        fastperiod:  Positive integers are accepted (default=None)
        slowperiod:  Positive integers are accepted (default=None)
        matype    :  Moving average type. By default, fastmatype=0.
            Integers 0 - 8 are accepted (check  down the mappings) or the string
            containing the math type can also be used.
    
            * 0 = Simple Moving Average (SMA),
            * 1 = Exponential Moving Average (EMA),
            * 2 = Weighted Moving Average (WMA),
            * 3 = Double Exponential Moving Average (DEMA),
            * 4 = Triple Exponential Moving Average (TEMA),
            * 5 = Triangular Moving Average (TRIMA),
            * 6 = T3 Moving Average,
            * 7 = Kaufman Adaptive Moving Average (KAMA),
            * 8 = MESA Adaptive Moving Average (MAMA)

----------------------------------------------------------------------

Help on function get_aroon in module alpha_vantage.techindicators

get_aroon(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the aroon values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_aroonosc in module alpha_vantage.techindicators

get_aroonosc(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the aroon oscillator values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_atr in module alpha_vantage.techindicators

get_atr(self, symbol, interval='daily', time_period=20)
    Return the average true range values in two json objects as
    data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_bbands in module alpha_vantage.techindicators

get_bbands(self, symbol, interval='daily', time_period=20, series_type='close', nbdevup=None, nbdevdn=None, matype=None)
    Return the bollinger bands values in two
    json objects as data and meta_data. It raises ValueError when problems
    arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily'
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')
        nbdevup:  The standard deviation multiplier of the upper band. Positive
            integers are accepted as default (default=2)
        nbdevdn:  The standard deviation multiplier of the lower band. Positive
            integers are accepted as default (default=2)
        matype :  Moving average type. By default, matype=0.
            Integers 0 - 8 are accepted (check  down the mappings) or the string
            containing the math type can also be used.
    
            * 0 = Simple Moving Average (SMA),
            * 1 = Exponential Moving Average (EMA),
            * 2 = Weighted Moving Average (WMA),
            * 3 = Double Exponential Moving Average (DEMA),
            * 4 = Triple Exponential Moving Average (TEMA),
            * 5 = Triangular Moving Average (TRIMA),
            * 6 = T3 Moving Average,
            * 7 = Kaufman Adaptive Moving Average (KAMA),
            * 8 = MESA Adaptive Moving Average (MAMA)

----------------------------------------------------------------------

Help on function get_bop in module alpha_vantage.techindicators

get_bop(self, symbol, interval='daily', time_period=20)
    Return the balance of power values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_cci in module alpha_vantage.techindicators

get_cci(self, symbol, interval='daily', time_period=20)
    Return the commodity channel index values  in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_cmo in module alpha_vantage.techindicators

get_cmo(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the Chande momentum oscillator in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_dema in module alpha_vantage.techindicators

get_dema(self, symbol, interval='daily', time_period=20, series_type='close')
    Return double exponential moving average time series in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_dx in module alpha_vantage.techindicators

get_dx(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the directional movement index values in two json objects as
    data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_ema in module alpha_vantage.techindicators

get_ema(self, symbol, interval='daily', time_period=20, series_type='close')
    Return exponential moving average time series in two json objects
    as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_ht_dcperiod in module alpha_vantage.techindicators

get_ht_dcperiod(self, symbol, interval='daily', series_type='close')
    Return the Hilbert transform, dominant cycle period in two
    json objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_ht_dcphase in module alpha_vantage.techindicators

get_ht_dcphase(self, symbol, interval='daily', series_type='close')
    Return the Hilbert transform, dominant cycle phase in two
    json objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_ht_phasor in module alpha_vantage.techindicators

get_ht_phasor(self, symbol, interval='daily', series_type='close')
    Return the Hilbert transform, phasor components in two
    json objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_ht_sine in module alpha_vantage.techindicators

get_ht_sine(self, symbol, interval='daily', series_type='close')
    Return the Hilbert transform, sine wave values in two
    json objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        series_type:  The desired price type in the time series. Four types
        are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_ht_trendline in module alpha_vantage.techindicators

get_ht_trendline(self, symbol, interval='daily', series_type='close')
    Return the Hilbert transform, instantaneous trendline values in two
    json objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_ht_trendmode in module alpha_vantage.techindicators

get_ht_trendmode(self, symbol, interval='daily', series_type='close')
    Return the Hilbert transform, trend vs cycle mode in two
    json objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_kama in module alpha_vantage.techindicators

get_kama(self, symbol, interval='daily', time_period=20, series_type='close')
    Return Kaufman adaptative moving average time series in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_macd in module alpha_vantage.techindicators

get_macd(self, symbol, interval='daily', series_type='close', fastperiod=None, slowperiod=None, signalperiod=None)
    Return the moving average convergence/divergence time series in two
    json objects as data and meta_data. It raises ValueError when problems
    arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily'
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')
        fastperiod:  Positive integers are accepted (default=None)
        slowperiod:  Positive integers are accepted (default=None)
        signalperiod:  Positive integers are accepted (default=None)

----------------------------------------------------------------------

Help on function get_macdext in module alpha_vantage.techindicators

get_macdext(self, symbol, interval='daily', series_type='close', fastperiod=None, slowperiod=None, signalperiod=None, fastmatype=None, slowmatype=None, signalmatype=None)
    Return the moving average convergence/divergence time series in two
    json objects as data and meta_data. It raises ValueError when problems
    arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')
        fastperiod:  Positive integers are accepted (default=None)
        slowperiod:  Positive integers are accepted (default=None)
        signalperiod:  Positive integers are accepted (default=None)
        fastmatype:  Moving average type for the faster moving average.
            By default, fastmatype=0. Integers 0 - 8 are accepted
            (check  down the mappings) or the string containing the math type can
            also be used.
        slowmatype:  Moving average type for the slower moving average.
            By default, slowmatype=0. Integers 0 - 8 are accepted
            (check down the mappings) or the string containing the math type can
            also be used.
        signalmatype:  Moving average type for the signal moving average.
            By default, signalmatype=0. Integers 0 - 8 are accepted
            (check down the mappings) or the string containing the math type can
            also be used.
    
            * 0 = Simple Moving Average (SMA),
            * 1 = Exponential Moving Average (EMA),
            * 2 = Weighted Moving Average (WMA),
            * 3 = Double Exponential Moving Average (DEMA),
            * 4 = Triple Exponential Moving Average (TEMA),
            * 5 = Triangular Moving Average (TRIMA),
            * 6 = T3 Moving Average,
            * 7 = Kaufman Adaptive Moving Average (KAMA),
            * 8 = MESA Adaptive Moving Average (MAMA)

----------------------------------------------------------------------

Help on function get_mama in module alpha_vantage.techindicators

get_mama(self, symbol, interval='daily', series_type='close', fastlimit=None, slowlimit=None)
    Return MESA adaptative moving average time series in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')
        fastlimit:  Positive floats for the fast limit are accepted
            (default=None)
        slowlimit:  Positive floats for the slow limit are accepted
            (default=None)

----------------------------------------------------------------------

Help on function get_mfi in module alpha_vantage.techindicators

get_mfi(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the money flow index values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_midpoint in module alpha_vantage.techindicators

get_midpoint(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the midpoint values in two json objects as
    data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_midprice in module alpha_vantage.techindicators

get_midprice(self, symbol, interval='daily', time_period=20)
    Return the midprice values in two json objects as
    data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_minus_di in module alpha_vantage.techindicators

get_minus_di(self, symbol, interval='daily', time_period=20)
    Return the minus directional indicator values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_minus_dm in module alpha_vantage.techindicators

get_minus_dm(self, symbol, interval='daily', time_period=20)
    Return the minus directional movement values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')

----------------------------------------------------------------------

Help on function get_mom in module alpha_vantage.techindicators

get_mom(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the momentum values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_natr in module alpha_vantage.techindicators

get_natr(self, symbol, interval='daily', time_period=20)
    Return the normalized average true range values in two json objects
    as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_obv in module alpha_vantage.techindicators

get_obv(self, symbol, interval='daily')
    Return the on balance volume values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')

----------------------------------------------------------------------

Help on function get_plus_di in module alpha_vantage.techindicators

get_plus_di(self, symbol, interval='daily', time_period=20)
    Return the plus directional indicator values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_plus_dm in module alpha_vantage.techindicators

get_plus_dm(self, symbol, interval='daily', time_period=20)
    Return the plus directional movement values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')

----------------------------------------------------------------------

Help on function get_ppo in module alpha_vantage.techindicators

get_ppo(self, symbol, interval='daily', series_type='close', fastperiod=None, slowperiod=None, matype=None)
    Return the percentage price oscillator values in two
    json objects as data and meta_data. It raises ValueError when problems
    arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily'
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')
        fastperiod:  Positive integers are accepted (default=None)
        slowperiod:  Positive integers are accepted (default=None)
        matype    :  Moving average type. By default, fastmatype=0.
            Integers 0 - 8 are accepted (check  down the mappings) or the string
            containing the math type can also be used.
    
            * 0 = Simple Moving Average (SMA),
            * 1 = Exponential Moving Average (EMA),
            * 2 = Weighted Moving Average (WMA),
            * 3 = Double Exponential Moving Average (DEMA),
            * 4 = Triple Exponential Moving Average (TEMA),
            * 5 = Triangular Moving Average (TRIMA),
            * 6 = T3 Moving Average,
            * 7 = Kaufman Adaptive Moving Average (KAMA),
            * 8 = MESA Adaptive Moving Average (MAMA)

----------------------------------------------------------------------

Help on function get_roc in module alpha_vantage.techindicators

get_roc(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the rate of change values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_rocr in module alpha_vantage.techindicators

get_rocr(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the rate of change ratio values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_rsi in module alpha_vantage.techindicators

get_rsi(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the relative strength index time series in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_sar in module alpha_vantage.techindicators

get_sar(self, symbol, interval='daily', acceleration=None, maximum=None)
    Return the midprice values in two json objects as
    data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        acceleration:  The acceleration factor. Positive floats are accepted (
            default 0.01)
        maximum:  The acceleration factor maximum value. Positive floats
            are accepted (default 0.20 )

----------------------------------------------------------------------

Help on function get_sma in module alpha_vantage.techindicators

get_sma(self, symbol, interval='daily', time_period=20, series_type='close')
    Return simple moving average time series in two json objects as data and
    meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_stoch in module alpha_vantage.techindicators

get_stoch(self, symbol, interval='daily', fastkperiod=None, slowkperiod=None, slowdperiod=None, slowkmatype=None, slowdmatype=None)
    Return the stochatic oscillator values in two
    json objects as data and meta_data. It raises ValueError when problems
    arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        fastkperiod:  The time period of the fastk moving average. Positive
            integers are accepted (default=None)
        slowkperiod:  The time period of the slowk moving average. Positive
            integers are accepted (default=None)
        slowdperiod: The time period of the slowd moving average. Positive
            integers are accepted (default=None)
        slowkmatype:  Moving average type for the slowk moving average.
            By default, fastmatype=0. Integers 0 - 8 are accepted
            (check  down the mappings) or the string containing the math type can
            also be used.
        slowdmatype:  Moving average type for the slowd moving average.
            By default, slowmatype=0. Integers 0 - 8 are accepted
            (check down the mappings) or the string containing the math type can
            also be used.
    
            * 0 = Simple Moving Average (SMA),
            * 1 = Exponential Moving Average (EMA),
            * 2 = Weighted Moving Average (WMA),
            * 3 = Double Exponential Moving Average (DEMA),
            * 4 = Triple Exponential Moving Average (TEMA),
            * 5 = Triangular Moving Average (TRIMA),
            * 6 = T3 Moving Average,
            * 7 = Kaufman Adaptive Moving Average (KAMA),
            * 8 = MESA Adaptive Moving Average (MAMA)

----------------------------------------------------------------------

Help on function get_stochf in module alpha_vantage.techindicators

get_stochf(self, symbol, interval='daily', fastkperiod=None, fastdperiod=None, fastdmatype=None)
    Return the stochatic oscillator values in two
    json objects as data and meta_data. It raises ValueError when problems
    arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        fastkperiod:  The time period of the fastk moving average. Positive
            integers are accepted (default=None)
        fastdperiod:  The time period of the fastd moving average. Positive
            integers are accepted (default=None)
        fastdmatype:  Moving average type for the fastdmatype moving average.
            By default, fastmatype=0. Integers 0 - 8 are accepted
            (check  down the mappings) or the string containing the math type can
            also be used.
    
            * 0 = Simple Moving Average (SMA),
            * 1 = Exponential Moving Average (EMA),
            * 2 = Weighted Moving Average (WMA),
            * 3 = Double Exponential Moving Average (DEMA),
            * 4 = Triple Exponential Moving Average (TEMA),
            * 5 = Triangular Moving Average (TRIMA),
            * 6 = T3 Moving Average,
            * 7 = Kaufman Adaptive Moving Average (KAMA),
            * 8 = MESA Adaptive Moving Average (MAMA)

----------------------------------------------------------------------

Help on function get_stochrsi in module alpha_vantage.techindicators

get_stochrsi(self, symbol, interval='daily', time_period=20, series_type='close', fastkperiod=None, fastdperiod=None, fastdmatype=None)
    Return the stochatic relative strength index in two
    json objects as data and meta_data. It raises ValueError when problems
    arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')
        fastkperiod:  The time period of the fastk moving average. Positive
            integers are accepted (default=None)
        fastdperiod:  The time period of the fastd moving average. Positive
            integers are accepted (default=None)
        fastdmatype:  Moving average type for the fastdmatype moving average.
            By default, fastmatype=0. Integers 0 - 8 are accepted
            (check  down the mappings) or the string containing the math type can
            also be used.
    
            * 0 = Simple Moving Average (SMA),
            * 1 = Exponential Moving Average (EMA),
            * 2 = Weighted Moving Average (WMA),
            * 3 = Double Exponential Moving Average (DEMA),
            * 4 = Triple Exponential Moving Average (TEMA),
            * 5 = Triangular Moving Average (TRIMA),
            * 6 = T3 Moving Average,
            * 7 = Kaufman Adaptive Moving Average (KAMA),
            * 8 = MESA Adaptive Moving Average (MAMA)

----------------------------------------------------------------------

Help on function get_t3 in module alpha_vantage.techindicators

get_t3(self, symbol, interval='daily', time_period=20, series_type='close')
    Return triple exponential moving average time series in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_tema in module alpha_vantage.techindicators

get_tema(self, symbol, interval='daily', time_period=20, series_type='close')
    Return triple exponential moving average time series in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_trange in module alpha_vantage.techindicators

get_trange(self, symbol, interval='daily')
    Return the true range values in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')

----------------------------------------------------------------------

Help on function get_trima in module alpha_vantage.techindicators

get_trima(self, symbol, interval='daily', time_period=20, series_type='close')
    Return triangular moving average time series in two json
    objects as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_trix in module alpha_vantage.techindicators

get_trix(self, symbol, interval='daily', time_period=20, series_type='close')
    Return the1-day rate of change of a triple smooth exponential
    moving average in two json objects as data and meta_data.
    It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function get_ultsoc in module alpha_vantage.techindicators

get_ultsoc(self, symbol, interval='daily', timeperiod1=None, timeperiod2=None, timeperiod3=None)
    Return the ultimate oscillaror values in two json objects as
    data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        timeperiod1:  The first time period indicator. Positive integers are
            accepted. By default, timeperiod1=7
        timeperiod2:  The first time period indicator. Positive integers are
            accepted. By default, timeperiod2=14
        timeperiod3:  The first time period indicator. Positive integers are
            accepted. By default, timeperiod3=28

----------------------------------------------------------------------

Help on function get_willr in module alpha_vantage.techindicators

get_willr(self, symbol, interval='daily', time_period=20)
    Return the Williams' %R (WILLR) values in two json objects as data
    and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)

----------------------------------------------------------------------

Help on function get_wma in module alpha_vantage.techindicators

get_wma(self, symbol, interval='daily', time_period=20, series_type='close')
    Return weighted moving average time series in two json objects
    as data and meta_data. It raises ValueError when problems arise
    
    Keyword Arguments:
        symbol:  the symbol for the equity we want to get its data
        interval:  time interval between two conscutive values,
            supported values are '1min', '5min', '15min', '30min', '60min', 'daily',
            'weekly', 'monthly' (default 'daily')
        time_period:  How many data points to average (default 20)
        series_type:  The desired price type in the time series. Four types
            are supported: 'close', 'open', 'high', 'low' (default 'close')

----------------------------------------------------------------------

Help on function map_to_matype in module alpha_vantage.alphavantage

map_to_matype(self, matype)
    Convert to the alpha vantage math type integer. It returns an
    integer correspondant to the type of math to apply to a function. It
    raises ValueError if an integer greater than the supported math types
    is given.
    
    Keyword Arguments:
        matype:  The math type of the alpha vantage api. It accepts
        integers or a string representing the math type.
    
            * 0 = Simple Moving Average (SMA),
            * 1 = Exponential Moving Average (EMA),
            * 2 = Weighted Moving Average (WMA),
            * 3 = Double Exponential Moving Average (DEMA),
            * 4 = Triple Exponential Moving Average (TEMA),
            * 5 = Triangular Moving Average (TRIMA),
            * 6 = T3 Moving Average,
            * 7 = Kaufman Adaptive Moving Average (KAMA),
            * 8 = MESA Adaptive Moving Average (MAMA)

----------------------------------------------------------------------

Help on function set_proxy in module alpha_vantage.alphavantage

set_proxy(self, proxy=None)
    Set a new proxy configuration
    
    Keyword Arguments:
        proxy: Dictionary mapping protocol or protocol and hostname to 
        the URL of the proxy.

----------------------------------------------------------------------

